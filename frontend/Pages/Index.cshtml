@page
@using static CC.CSX.HtmlElements;
@using static CC.CSX.HtmlAttributes;
@using static BaseWeb.HtmlItemExtensions;
@using static BaseWeb.Layout;

@{
    ViewData["Title"] = "Base42";
}

@{
    var placeholder = Div(
        @class("grid grid-cols-12 gap-4 col-span-12 col-span-4 col-span-8 md:col-span-4 md:col-span-8")
    );
    var FancyBg = Div(
        @class("-z-10"),
        id("wrapper"),
        Div(id("content"),
            Div(id("interlace")),
            Div(id("scanline")),
            Div(id("envelope"),
                Div(id("terminal"),
                    Div(id("output"))
                )
            ),
            Div(id("krc"))
        )
    );

    var CtaButton = (string text, string hrefAttr, string type) =>
        A(
            href(hrefAttr),
            (type == "primary" 
                ? @class("cta-button-primary")
                : @class("cta-button-secondary")
            ),
            text
        );

    var Hero = Div(
        id("hero"),
        Div(
            @class("text-white py-16 relative h-full flex justify-center items-center flex-col"),
            Div(
                @class("overflow-hidden"),
                FancyBg
            ),
            Div(
                await MarkdownAsync("home", "Hero"),

                @class("container md:pt-20 mx-auto text-center"),
                H1(
                    @class("mt-10 text-lg md:text-4xl  mb-20 font-bold")
                ),
                Div(
                    @class("flex justify-center items-center flex-wrap"),
                    CtaButton("./build.sh", "#about", "secondary")
                )
            )
        ));
}



@await CSX(WithLayout(
    "Base42",
    Hero,
    Div(@class("text-primary border-secondary-500 border-primary hidden")),
    Div(@class("container mx-auto p-10"),
        await MarkdownAsync("home", "Content")
    )
))